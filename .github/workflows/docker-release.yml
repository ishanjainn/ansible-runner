#name: Docker-Release
#
#on:
#  push:
#    branches: [ main ]
#
#env:
#  REGISTRY: docker.io
#  IMAGE_NAME: ${{ github.repository }}
#
#jobs:
#  release:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout source code
#        uses: 'actions/checkout@v2'
#        with:
#          ref: ${{ github.ref }}
#          fetch-depth: 0
#
#      - name: Get specific changed files
#        id: changed-files-specific
#        uses: tj-actions/changed-files@v14.7
#        with:
#          files: |
#            .github
#            renovate.json
#            README.md
#            .idea
#
#      - name: Automated Version Bump
#        if: steps.changed-files-specific.outputs.any_changed == 'false'
#        id: version-bump
#        uses: 'phips28/gh-action-bump-version@master'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Output Step
#        if: steps.changed-files-specific.outputs.any_changed == 'false'
#        env:
#          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
#        run: echo "new tag $NEW_TAG"
#
#      - name: Log into registry ${{ env.REGISTRY }}
#        if: steps.changed-files-specific.outputs.any_changed == 'false'
#        uses: docker/login-action@v1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        if: steps.changed-files-specific.outputs.any_changed == 'false'
#        uses: docker/build-push-action@v2
#        with:
#          context: ./docker
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ steps.version-bump.outputs.newTag }}